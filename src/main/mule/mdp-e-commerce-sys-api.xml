<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:json-logger="http://www.mulesoft.org/schema/mule/json-logger" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd 
http://www.mulesoft.org/schema/mule/json-logger http://www.mulesoft.org/schema/mule/json-logger/current/mule-json-logger.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">
    <http:listener-config name="mdp-e-commerce-sys-api-httpListenerConfig">
        <http:listener-connection host="0.0.0.0" port="8081" />
    </http:listener-config>
    <apikit:config name="mdp-e-commerce-sys-api-config" api="mdp-e-commerce-sys-api.raml" outboundHeadersMapName="outboundHeaders" httpStatusVarName="httpStatus" />
    <json-logger:config name="JSON_Logger_Config" doc:name="JSON Logger Config" doc:id="580929ac-2ae3-4e84-923c-8941142edb3e" environment="${env}" />
	<http:request-config name="HTTP_Request_configuration" doc:name="HTTP Request configuration" doc:id="dde89b4b-714e-435e-861d-5b0136467cc4" basePath="${https.orders.basepath}" >
		<http:request-connection protocol="HTTPS" host="${https.orders.host}" port="${https.orders.port}" />
	</http:request-config>
	<db:config name="Database_Config1" doc:name="Database Config" doc:id="6f58fd2d-4c38-428e-8385-5ba75ba26fe2" >
		<db:generic-connection url="jdbc:postgresql://arjuna.db.elephantsql.com/kpwmtocy?sslmode=require" driverClassName="org.postgresql.Driver" user="kpwmtocy" password="HwUZlxoYGc0qV1c7SNNoGRrSDWZ8E-Fb" />
	</db:config>
	<flow name="mdp-e-commerce-sys-api-main">
        <http:listener config-ref="mdp-e-commerce-sys-api-httpListenerConfig" path="/api/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:router config-ref="mdp-e-commerce-sys-api-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:BAD_REQUEST">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Bad request"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">400</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:METHOD_NOT_ALLOWED">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Method not allowed"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">405</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_ACCEPTABLE">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not acceptable"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">406</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:UNSUPPORTED_MEDIA_TYPE">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Unsupported media type"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">415</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_IMPLEMENTED">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not Implemented"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">501</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="mdp-e-commerce-sys-api-console">
        <http:listener config-ref="mdp-e-commerce-sys-api-httpListenerConfig" path="/console/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:console config-ref="mdp-e-commerce-sys-api-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="put:\update:application\json:mdp-e-commerce-sys-api-config">
        <json-logger:logger doc:name="Start Log" doc:id="0324dfff-c8ba-43a1-89d5-fb91ce3b20be" config-ref="JSON_Logger_Config" message="update data flow started"/>
		<ee:transform>
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
  message: "Data updated successfully"
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<json-logger:logger doc:name="End Log" doc:id="a932d0fe-c4d7-4958-8441-2d1ab3b4bc8e" config-ref="JSON_Logger_Config" message="update data flow ended"/>
    </flow>
    <flow name="delete:\delete:application\json:mdp-e-commerce-sys-api-config">
        <ee:transform>
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
  message: "Data deleted successfully"
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
    <flow name="get:\select:mdp-e-commerce-sys-api-config">
        <ee:transform>
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
  message: "Data fetched successfully"
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
	<flow name="post:\create:application\json:mdp-e-commerce-sys-api-config">
        <ee:transform>
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
  message: "New record has been created successfully"
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
	<sub-flow name="mdp-e-commerce-sys-apiSub_Flow" doc:id="d0efd6f4-0677-4fa7-9b99-70372b5125f6" >
		<json-logger:logger doc:name="Start Log" doc:id="b77f61f0-4804-43ec-896a-408741dbf618" config-ref="JSON_Logger_Config" message="mdp e-commerce system api flow started"/>
		<ee:transform doc:name="Transform Message" doc:id="015e4603-f10e-4880-b590-491e25cc4f65" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<db:insert doc:name="Insert" doc:id="1d0f6260-94b3-4b72-91a3-8ef2877af490" config-ref="Database_Config1">
			<db:sql ><![CDATA[insert into orders(order_id, customer_name, product, customer_address, customer_contact, order_type, regionOfSale, orderValue)
values(:order_id, :customer_name, :product, :customer_address, :customer_contact, :order_type, :regionOfSale, :orderValue)]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	order_id: payload.order_id,
	customer_name: payload.customer_name,
	product: payload.product,
	customer_address: payload.customer_address,
	customer_contact: payload.customer_contact,
	order_type: payload.order_type,
	regionOfSale: payload.regionOfSale,
	orderValue: payload.orderValue
	
}]]]></db:input-parameters>
		</db:insert>
		<json-logger:logger doc:name="End Log" doc:id="3a61287e-a686-4ab4-a412-6f8ded9c5d9b" config-ref="JSON_Logger_Config" message="mdp e-commerce system api flow ended" tracePoint="END"/>
	</sub-flow>
	<sub-flow name="mdp-e-commerce-sys-api-update-flow" doc:id="2f963e9a-b99e-4de6-8263-7844c911217d" >
		<json-logger:logger doc:name="Start Log" doc:id="6fc7a477-1cf1-421e-a82a-bc0d209ed374" config-ref="JSON_Logger_Config" message="mdp-e-commerce-sys-api-update-flow started"/>
		<http:request method="POST" doc:name="Request" doc:id="d166359d-6818-424c-a9d1-9aee13f1aaf5" config-ref="HTTP_Request_configuration" path="${online.https.orders.path}"/>
		<ee:transform doc:name="Transform Message" doc:id="0cb1f96c-bb4a-4eae-ad58-5539f6732621" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<db:select doc:name="Select" doc:id="1ea8cfdb-9791-46aa-add8-597bf52a8f87" config-ref="Database_Config1">
			<db:sql ><![CDATA[Select * from orders where order_id = :order_id;]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	order_id: payload.order_id
}]]]></db:input-parameters>
		</db:select>
		<json-logger:logger doc:name="End Log" doc:id="10034277-b5bd-4fa3-8b0f-f23328aace65" config-ref="JSON_Logger_Config" message="mdp-e-commerce-sys-api-update-flow ended" tracePoint="END"/>
	</sub-flow>
</mule>
